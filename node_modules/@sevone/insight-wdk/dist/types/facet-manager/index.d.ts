import { FacetType, FacetSchema, FacetData, FacetStack } from './types';
declare function isSchemaCompatible(base: FacetSchema, provided: FacetSchema): boolean;
declare function createFacet(schema: FacetSchema, data: FacetData): FacetType;
declare function createFacetStack(initialFacets?: Array<FacetType>): FacetStack;
declare function queryFacetProducers(schema: FacetSchema): string[];
declare function queryFacetConsumers(schema: FacetSchema): string[];
declare function queryCompatibleWidgetProducers(widgetId: string): string[];
declare function queryCompatibleWidgetConsumers(widgetId: string): string[];
declare const _default: Readonly<{
    createFacet: typeof createFacet;
    createFacetStack: typeof createFacetStack;
    queryFacetProducers: typeof queryFacetProducers;
    queryFacetConsumers: typeof queryFacetConsumers;
    queryCompatibleWidgetProducers: typeof queryCompatibleWidgetProducers;
    queryCompatibleWidgetConsumers: typeof queryCompatibleWidgetConsumers;
    isSchemaCompatible: typeof isSchemaCompatible;
}>;
export default _default;
